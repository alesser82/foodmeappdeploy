{"version":3,"sources":["assets/images/aneka-makanan.jpg","components/Navbar.js","components/Footer/Footer.js","components/ImagesAndWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","Footer","href","ImagesAndWelcome","style","marginBottom","maxHeight","src","mainImage","alt","CityCard","props","city","name","country_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","sumResult","SearchCity","onSubmit","onClickSearch","type","placeholder","value","onChange","API","zomato","baseUrl","api_key","process","Home","changeKeywordHandler","event","setState","keyword","target","searchHandler","preventDefault","state","url","Axios","get","headers","params","q","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","marginTop","Component","CategoryList","categories","category","categorySelected","onClick","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","width","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","restaurants","entity_id","entity_type","axios","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","addToCriteriaHandler","splice","getCategoriesData","renderRestaurantList","match","RestaurantProfile","featured_image","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getReviewData","restaurant_id","res_id","reviews","user_reviews","getRestaurantData","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","require","config"],"mappings":"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","file":"static/js/main.9b9db86f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aneka-makanan.2eceeef0.jpg\";","import React from 'react';\r\n// import link from react-router\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n        <Link className=\"navbar-brand\" to={`/`}>Food Me</Link>\r\n    </nav>\r\n);\r\n\r\nexport default Navbar;","import React from 'react';\r\n// import css footer\r\nimport './Footer.css';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"my-footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 text-center\">\r\n                    <h5>About FoodMe</h5>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/#\">About</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#\">Contact Us</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm-4 text-center\">\r\n                    <h5>Support</h5>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/#\">FAQ</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#\">Help Desk</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#\">Forums</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm-4 text-center\">\r\n                    <h5>Download App</h5>\r\n                    <ul>\r\n                        <li>\r\n                            <a href=\"/#\">Google Play</a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"/#\">App Store</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"social-networks\">\r\n            <a href=\"/#\" className=\"twitter\"><i className=\"fab fa-twitter\"></i></a>\r\n            <a href=\"/#\" className=\"facebook\"><i className=\"fab fa-facebook\"></i></a>\r\n            <a href=\"/#\" className=\"google\"><i className=\"fab fa-google-plus\"></i></a>\r\n        </div>\r\n        <div className=\"text-center footer-copyright\">\r\n            <p>Copyright &copy; 2019 FoodMe</p>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\n// import images\r\nimport mainImage from '../assets/images/aneka-makanan.jpg';\r\n\r\nconst ImagesAndWelcome = () => (\r\n    <>\r\n    <div className=\"row\" style={{ marginBottom: 30 }}>\r\n        <div className=\"col overflow-hidden\" style={{ maxHeight: '100vh' }}>\r\n            <img src={mainImage} className=\"w-100\" alt=\"Aneka Makanan\" />\r\n        </div>\r\n    </div>\r\n    <div className=\"row\">\r\n        <div className=\"col\">\r\n            <div className=\"card text-white bg-success mb-3 text-center\">\r\n                <div className=\"card-header\"><h1>Welcome to Food Me</h1></div>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-titile\">The Easier Way to Find Restaurant and Food</h4>\r\n                    <p className=\"card-text\">You can grab information abput restaurant, cafe, cuisine with just a few click.</p>\r\n                    <p className=\"card-text\">Start by choosing the features cities below. or search city name.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n);\r\n\r\nexport default ImagesAndWelcome;","import React from \"react\";\r\n// import link from react router\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CityCard = (props) => (\r\n    <div className=\"col-4\">\r\n        <div className=\"card bg-light mb-3\">\r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-title\">{props.city.name}</h3>\r\n                <p>{props.city.country_name}</p>\r\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">See restaurant in {props.city.name}</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CityCard;\r\n","import React from 'react';\r\n// import CityCard Component\r\nimport CityCard from './CityCard';\r\n\r\nconst CityList = (props) => (\r\n    <>\r\n    <div className=\"row\">\r\n        <div className=\"col-12\">\r\n            <h3>{props.title}</h3>\r\n            { props.showSubtitle === true && props.subtitle !== '' ?\r\n            <h6 className=\"text-muted\">Search result for keyword '{props.subtitle}', {props.sumResult} kota ditemukan.</h6>\r\n            : null }\r\n        </div>\r\n    </div>\r\n    <div className=\"row\">\r\n        {props.cities == null ? (\r\n            <div className=\"col\">\r\n                <p>Loading...</p>\r\n            </div>\r\n        ) : (\r\n            _renderCityList(props.cities)\r\n        )}\r\n    </div>\r\n    </>\r\n);\r\n\r\nconst _renderCityList = (cities) => {\r\n    if (cities.length > 0) {\r\n        return (\r\n            cities.map(city => \r\n                <CityCard key={city.id} city={city} />\r\n            )\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"col\">\r\n                <p className=\"text-danger\">Kota tidak ditemukan.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CityList;","import React from 'react';\r\n\r\nconst SearchCity = (props) => (\r\n    <div className=\"row\" style={{ marginBottom: 30 }}>\r\n        <div className=\"col\">\r\n            <h3>Search City</h3>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={props.onClickSearch}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-11\">\r\n                            <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Type keyword or city name\"\r\n                            value={props.value}\r\n                            onChange={props.onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-1\">\r\n                            <button\r\n                            className=\"btn btn-primary\"\r\n                            type=\"submit\"\r\n                            >\r\n                            Search\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default SearchCity;","export const API = {\r\n    zomato: {\r\n        baseUrl: 'https://developers.zomato.com/api/v2.1',\r\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO, // get key from file .env\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import ImagesAndWelcome Component\r\nimport ImagesAndWelcome from '../components/ImagesAndWelcome';\r\n// import CityList Component\r\nimport CityList from '../components/CityList';\r\n// import SearchCity Component\r\nimport SearchCity from '../components/SearchCity';\r\n// import axios\r\nimport Axios from 'axios';\r\n// import file api config\r\nimport {API} from '../config/api';\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            keyword: '',\r\n            featuredCities: null,\r\n            citiesResultSearch: [],\r\n            cityKeywordSearch: '',\r\n        }\r\n    }\r\n\r\n    // keyword search change handler\r\n    changeKeywordHandler = (event) => {\r\n        this.setState({\r\n            keyword: event.target.value\r\n        });\r\n    };\r\n\r\n    // search button handler\r\n    searchHandler = (event) => {\r\n        event.preventDefault();\r\n        let keyword = this.state.keyword;\r\n        let url = `${API.zomato.baseUrl}/cities`;\r\n        Axios.get(url,{\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                q: keyword\r\n            }\r\n        }).then(({ data }) => {\r\n            if (data.status === 'success') {\r\n                this.setState({ \r\n                    citiesResultSearch: data.location_suggestions,\r\n                    keyword: '',\r\n                    cityKeywordSearch: keyword,\r\n                })\r\n            }\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    // get City from zomato api\r\n    getFeaturedCities = () => {\r\n        let url = `${API.zomato.baseUrl}/cities`;\r\n        Axios.get(url, {\r\n            // api key\r\n            headers: {\r\n                'user-key': API.zomato.api_key,\r\n            },\r\n            // api parameter\r\n            params: {\r\n                city_ids: \"74,11052,170\"\r\n            }\r\n        }).then(({ data }) => { // tangkap respon\r\n            if (data.status === 'success') {\r\n                this.setState({ featuredCities: data.location_suggestions });\r\n            }\r\n        }).catch(err => console.log(err)); // tangkap error\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFeaturedCities();\r\n    }\r\n\r\n    render() {\r\n        // const citiesDummy = [\r\n        //     { id: 74, name: \"Jakarta\", country_name: \"Indonesia\" },\r\n        //     { id: 11052, name: \"Bandung\", country_name: \"Indonesia\" },\r\n        //     { id: 170, name: \"Bali\", country_name: \"Indonesia\" },\r\n        // ];\r\n\r\n        return (\r\n            <>\r\n            {/* Start of imageandwelcome section */}\r\n            <ImagesAndWelcome/>\r\n            {/* End of imageandwelcome section */}\r\n\r\n            <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n            {/* Start of featured city section */}\r\n            <CityList\r\n                cities={this.state.featuredCities}\r\n                title={'Featured City'}\r\n            />\r\n            {/* End of featured city section */}\r\n\r\n            {/* Start of search city section */}\r\n            <SearchCity\r\n                // value={this.state.keyword}\r\n                value={this.state.keyword}\r\n                onChange={this.changeKeywordHandler}\r\n                onClickSearch={this.searchHandler}\r\n            />\r\n            {/* End of search city section */}\r\n\r\n            {/* Start of search city result section */}\r\n            { this.state.cityKeywordSearch !== '' ?\r\n            <CityList\r\n                title={'Search Result'}\r\n                showSubtitle={true}\r\n                subtitle={this.state.cityKeywordSearch}\r\n                cities={this.state.citiesResultSearch}\r\n                sumResult={this.state.citiesResultSearch.length}\r\n            />\r\n            : null }\r\n            {/* End of search city result section */}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst CategoryList = (props) => (\r\n    props.categories ? (\r\n        <div className=\"list-group\">\r\n            {props.categories.map(category => (\r\n                <button\r\n                    key={category.id}\r\n                    className={\"list-group-item list-group-item-action\" + (props.categorySelected && props.categorySelected.id === category.id ? ' active' : '')}\r\n                    onClick={() => props.categoryClickHandler(category)}\r\n                >\r\n                    {category.name}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    ) : (\r\n        <p>Loading...</p>\r\n    )\r\n)\r\n\r\nexport default CategoryList\r\n","import React from 'react'\r\n\r\nconst SearchKeyword = (props) => (\r\n    <>\r\n        <h5>Keyword</h5>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <form className=\"w-100\" onSubmit={props.onClickAddToCriteria}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-10\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Type keyword i.e:  restaurant's name, location, cuisine, etc\"\r\n                            value={props.keyword}\r\n                            onChange={props.changeKeywordHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\" onClick={props.onClickAddToCriteria}>\r\n                            Add to criteria\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </>\r\n)\r\n\r\nexport default SearchKeyword\r\n","import React from 'react'\r\n\r\nconst SearchCriteria = (props) => (\r\n    <div className=\"card bg-light mb-3\" style={{marginTop: 20}}>\r\n        <div className=\"card-body\">\r\n            <p className=\"card-title\">Find Restaurant based on criteria</p>\r\n            <table className=\"table table-hover\">\r\n                <tbody>\r\n                    {/* looping criteria */}\r\n                    {props.criteria.map((cri, index) => (\r\n                        <tr key={index} className=\"table-active\">\r\n                            <td width=\"40%\">{cri.criteriaName}</td>\r\n                            <td width=\"50%\">{cri.data.name}</td>\r\n                            <td width=\"10%\">\r\n                                {/* Hide from criteria city */}\r\n                                {cri.criteriaName !== 'City' && (\r\n                                    <i\r\n                                    className=\"fa fa-times\"\r\n                                    aria-hidden=\"true\"\r\n                                    style={{ color: \"red\" }}\r\n                                    onClick={() => props.removeCriteriaHandler(index)}\r\n                                    ></i>\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"float-right\">\r\n                <button className=\"btn btn-primary\" type=\"button\" onClick={props.onClickSearch}>Search</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default SearchCriteria\r\n","import React from 'react'\r\n\r\nconst RatingLabel = (props) => (\r\n    <div\r\n        className=\"btn btn-sm\"\r\n        style={{\r\n            color: 'white',\r\n            backgroundColor: `#${props.labelColor}`,\r\n            borderColor: `#${props.labelColor}`\r\n        }}\r\n    >\r\n        {props.text}\r\n    </div>\r\n)\r\n\r\nexport default RatingLabel\r\n","import React from 'react';\r\n// import Link from React Router Dom\r\nimport { Link } from \"react-router-dom\";\r\nimport RatingLabel from './RatingLabel';\r\n\r\nconst RestaurantCard = (props) => (\r\n    <div className=\"col-6\" style={{marginBottom: 20}} key={props.restaurant.id}>\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <img className=\"img-responsive w-100\" src={props.restaurant.thumb} alt={props.restaurant.name} style={{borderRadius: 5}} />\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <h4 className=\"text-success\" style={{fontWeight: 800}}>{props.restaurant.name}</h4>\r\n                        <h6>{props.restaurant.location.locality}</h6>\r\n                        <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Rating</td>\r\n                            <td>\r\n                                <RatingLabel\r\n                                    labelColor={props.restaurant.user_rating.rating_color}\r\n                                    text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cuisines</td>\r\n                            <td>{props.restaurant.cuisines}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cost for two</td>\r\n                            <td>\r\n                                {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\r\n                    <button type=\"button\" className=\"btn btn-outline-success btn-block\">\r\n                        View Restaurant Details\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default RestaurantCard\r\n","import React, { Component } from 'react';\r\n// import axios\r\nimport axios from 'axios';\r\n// import config api\r\nimport { API } from \"../config/api\";\r\n// import CategoryList component\r\nimport CategoryList from '../components/CategoryList';\r\n// import SearchKeyword component\r\nimport SearchKeyword from '../components/SearchKeyword';\r\nimport SearchCriteria from '../components/SearchCriteria';\r\nimport RestaurantCard from '../components/RestaurantCard';\r\n\r\n\r\n// dummy categories data \r\n// const categoriesDummy = [\r\n//     {\r\n//         \"categories\": {\r\n//             \"id\": 1,\r\n//             \"name\": \"Delivery\"\r\n//         }\r\n//     }, {\r\n//         \"categories\": {\r\n//             \"id\": 2,\r\n//             \"name\": \"Dine-out\"\r\n//         }\r\n//     }, {\r\n//         \"categories\": {\r\n//             \"id\": 3,\r\n//             \"name\": \"Nightlife\"\r\n//         }\r\n//     }, {\r\n//         \"categories\": {\r\n//             \"id\": 4,\r\n//             \"name\": \"Catching-up\"\r\n//         }\r\n//     }\r\n// ];\r\n\r\n// dummy restaurant data\r\n// const restaurants = [\r\n//     {\r\n//         \"restaurant\": {\r\n//             \"id\": \"18875696\",\r\n//             \"name\": \"Kintaro Sushi\",\r\n//             \"location\": {\r\n//                 \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n//                 \"locality\": \"Senopati\",\r\n//             },\r\n//             \"cuisines\": \"Sushi, Japanese\",\r\n//             \"average_cost_for_two\": 200000,\r\n//             \"currency\": \"IDR\",\r\n//             \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n//             \"user_rating\": {\r\n//                 \"aggregate_rating\": \"4.9\",\r\n//                 \"rating_text\": \"Excellent\",\r\n//                 \"rating_color\": \"3F7E00\",\r\n//                 \"votes\": \"1358\"\r\n//             },\r\n//         }\r\n//     }, {\r\n//         \"restaurant\": {\r\n//             \"id\": \"18875696\",\r\n//             \"name\": \"Kintaro Sushi\",\r\n//             \"location\": {\r\n//                 \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n//                 \"locality\": \"Senopati\",\r\n//             },\r\n//             \"cuisines\": \"Sushi, Japanese\",\r\n//             \"average_cost_for_two\": 200000,\r\n//             \"currency\": \"IDR\",\r\n//             \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n//             \"user_rating\": {\r\n//                 \"aggregate_rating\": \"4.9\",\r\n//                 \"rating_text\": \"Excellent\",\r\n//                 \"rating_color\": \"3F7E00\",\r\n//                 \"votes\": \"1358\"\r\n//             },\r\n//         }\r\n//     }\r\n// ]\r\n\r\nexport default class City extends Component {\r\n    // state\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            city: null,\r\n            categories: null,\r\n            categorySelected: null,\r\n            keyword: '',\r\n            criteria: [],\r\n            restaurants: [],\r\n        }\r\n    }\r\n\r\n    // method for handler button search\r\n    searchHandler = () => {\r\n        this.setState({restaurants: null});\r\n        let url = `${API.zomato.baseUrl}/search`;\r\n        let params = {};\r\n\r\n        for (let cri of this.state.criteria) {\r\n            switch (cri.criteriaName) {\r\n                case 'City':\r\n                    params.entity_id    = cri.data.id;\r\n                    params.entity_type  = 'city'; \r\n                    break;\r\n                case 'Category':\r\n                    params.category = cri.data.id\r\n                    break;\r\n                case 'Keyword':\r\n                    params.q = cri.data.name;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        axios\r\n            .get(url, {\r\n                headers: {\r\n                    'user-key': API.zomato.api_key\r\n                },\r\n                params\r\n            })\r\n            .then(({data}) => {\r\n                this.setState({restaurants: data.restaurants})\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    // transform categories data\r\n    transformCategoriesData = (categories) => {\r\n        // variable has copied from categories data but data has been releases from \"categories\"\r\n        let categoriesTransformed = categories.map(category => {\r\n            return category.categories;\r\n        });\r\n        // kembalikan\r\n        return categoriesTransformed;\r\n    }\r\n\r\n    // get City data from city_id in path\r\n    getCityData = (city_id) => {\r\n        let url = `${API.zomato.baseUrl}/cities`;\r\n        axios\r\n            .get(url, {\r\n                headers: {\r\n                    \"user-key\": API.zomato.api_key\r\n                },\r\n                params: {\r\n                    city_ids: `${city_id}`\r\n                }\r\n            })\r\n            .then(({ data }) => {\r\n                // variable for city data\r\n                let city = data.location_suggestions[0];\r\n\r\n                // variable for criteria\r\n                let newCriteria = {\r\n                    criteriaName: 'City',\r\n                    data: city\r\n                }\r\n\r\n                // copy state of Criteria to array\r\n                let criteria = [...this.state.criteria];\r\n                // push newCriteria to criteria\r\n                criteria.push(newCriteria);\r\n\r\n                this.setState({ city, criteria });\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    componentDidMount() {\r\n        let { city_id } = this.props.match.params;\r\n        this.getCityData(city_id);\r\n        // start get category data from zomato after UI rendered\r\n        this.getCategoriesData();\r\n    }\r\n\r\n    // method for menu category onclick\r\n    categoryClickHandler = (category) => {\r\n        // copy state of criteria\r\n        let criteria = [...this.state.criteria];\r\n        // delete criteria selected\r\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Category')\r\n        let newCriteria = {\r\n            criteriaName: 'Category',\r\n            data: category\r\n        }\r\n        // add new criteria selected\r\n        criteria.push(newCriteria);\r\n        this.setState({ categorySelected: category, criteria });\r\n    }\r\n\r\n    // method for input keyword changed\r\n    changeKeywordHandler = (event) => {\r\n        this.setState({keyword: event.target.value})\r\n    }\r\n\r\n    // method for button search onclick\r\n    addToCriteriaHandler = (event) => {\r\n        event.preventDefault();\r\n        // copy state of criteria\r\n        let criteria = [...this.state.criteria];\r\n        // prevent criteria multiple input\r\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword');\r\n        let newCriteria = {\r\n            criteriaName: 'Keyword',\r\n            data: {\r\n                name: this.state.keyword\r\n            }\r\n        }\r\n        criteria.push(newCriteria);\r\n        this.setState({ keyword: '', criteria });\r\n    }\r\n\r\n    // method for remove criteria from index\r\n    removeCriteriaHandler = (index) => {\r\n        // copy state of criteria\r\n        let criteria = [...this.state.criteria];\r\n        criteria.splice(index, 1);\r\n        this.setState({ criteria });\r\n    }\r\n\r\n    // method for get category data from api zomato\r\n    getCategoriesData = () => {\r\n        let url = `${API.zomato.baseUrl}/categories`;\r\n        axios\r\n            .get(url, {\r\n                headers: {\r\n                    'user-key': API.zomato.api_key\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                // get categories data from transformCategoryData\r\n                let categories = this.transformCategoriesData(data.categories);\r\n                this.setState({categories});\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    renderRestaurantList = () => {\r\n        if (this.state.restaurants === null) {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>Loading...</p>\r\n                </div>\r\n            )\r\n        }\r\n        if (this.state.restaurants.length > 0) {\r\n            return (\r\n                this.state.restaurants.map(({restaurant}) => (\r\n                    <RestaurantCard\r\n                        key={restaurant.id}\r\n                        restaurant={restaurant}\r\n                    />\r\n                ))\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>No data available. Use search for info.</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n                {/* check state city null or not */}\r\n                {this.state.city && (\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4 className=\"text-success\">Restaurant in <span>{ this.state.city.name }</span>, { this.state.city.country_name }</h4>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-sm-12\">\r\n                        <h5>Categories</h5>\r\n                        <CategoryList\r\n                            categories={this.state.categories}\r\n                            categorySelected={this.state.categorySelected}\r\n                            categoryClickHandler={(category) => this.categoryClickHandler(category)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <SearchKeyword\r\n                            onClickAddToCriteria={this.addToCriteriaHandler}\r\n                            keyword={this.state.keyword}\r\n                            changeKeywordHandler={this.changeKeywordHandler}\r\n                        />\r\n                        <SearchCriteria\r\n                            criteria={this.state.criteria}\r\n                            removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\r\n                            onClickSearch={this.searchHandler}\r\n                        />\r\n                        <div className=\"row\">\r\n                            <div className=\"col\" style={{marginBottom: 20}}>\r\n                                <h4 className=\"text-success\">Restaurant List</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {this.renderRestaurantList()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n// import RatingLabel component\r\nimport RatingLabel from './RatingLabel'\r\n\r\nconst RestaurantProfile = (props) => (\r\n    <div className=\"card\">\r\n        <div className=\"card-header\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {props.restaurant ? (\r\n                        <>\r\n                            <h4 className=\"text-success\" style={{ fontWeight: 800 }}>\r\n                                {props.restaurant.name}\r\n                            </h4>\r\n                            <h6 style={{ fontWeight: 600 }}>\r\n                                {props.restaurant.location.locality}\r\n                            </h6>\r\n                            <h6 className=\"text-muted\">\r\n                                {props.restaurant.location.address}\r\n                            </h6>\r\n                        </>\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n            {props.restaurant ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 my-1\">\r\n                        <img\r\n                            className=\"img-responsive w-100\"\r\n                            src={props.restaurant.featured_image}\r\n                            alt=\"\"\r\n                            style={{ borderRadius: 5 }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-lg-6 my-1\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Rating</td>\r\n                                    <td>\r\n                                        <RatingLabel\r\n                                            labelColor={props.restaurant.user_rating.rating_color}\r\n                                            text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Cuisines</td>\r\n                                    <td>{props.restaurant.cuisines}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Cost for two</td>\r\n                                    <td>\r\n                                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <p>Loading ...</p>\r\n            )}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default RestaurantProfile\r\n","import React from 'react'\r\n// import RatingLabel component\r\nimport RatingLabel from '../components/RatingLabel'\r\n\r\nconst Review = (props) => (\r\n    <div className=\"card border-success\" style={{ marginBottom: 5 }}>\r\n        <div className=\"card-body\">\r\n        <div className=\"row\" style={{ marginBottom: 20 }}>\r\n            <div className=\"col-1\" style={{ border: '0px solid black' }}>\r\n            <img className=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\r\n            </div>\r\n            <div className=\"col-11\" style={{ border: '0px solid black' }}>\r\n            <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n            <RatingLabel\r\n                text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\r\n                labelColor={`${props.review.user.foodie_color}`}\r\n            />\r\n            </div>\r\n        </div>\r\n        <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\r\n        <RatingLabel\r\n            text={`${props.review.rating} (${props.review.rating_text})`}\r\n            labelColor={`${props.review.rating_color}`}\r\n        />\r\n        <p className=\"card-text\">{props.review.review_text}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Review\r\n","import React, { Component } from 'react'\r\n// import axios\r\nimport axios from 'axios';\r\n// import api config\r\nimport { API } from \"../config/api\";\r\n// import RestaurantProfile component\r\nimport RestaurantProfile from '../components/RestaurantProfile';\r\nimport Review from '../components/Review';\r\n\r\n\r\nexport default class RestaurantDetail extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            restaurant: null,\r\n            reviews: null\r\n        };\r\n    }\r\n\r\n    // method for request review api zomato\r\n    getReviewData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/reviews`;\r\n        axios\r\n            .get(url, {\r\n                headers: {\r\n                    'user-key' : API.zomato.api_key\r\n                },\r\n                params: {\r\n                    res_id: restaurant_id\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                this.setState({reviews: data.user_reviews})\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    // method for request api zomato\r\n    getRestaurantData = (restaurant_id) => {\r\n        // url api\r\n        let url = `${API.zomato.baseUrl}/restaurant`;\r\n        // get data with api_key and resturant_id from path\r\n        axios\r\n            .get(url, {\r\n                headers: {\r\n                    'user-key': API.zomato.api_key\r\n                },\r\n                params: {\r\n                    res_id: restaurant_id\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                // update state\r\n                this.setState({ restaurant: data })\r\n            })\r\n            .catch(err => console.log(err)) // if error\r\n    }\r\n\r\n    componentDidMount() {\r\n        // get id from url\r\n        let {params} = this.props.match;\r\n        // call method getRestaurantData\r\n        this.getRestaurantData(params.restaurant_id);\r\n        // call method getReviewsData\r\n        this.getReviewData(params.restaurant_id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{marginTop: 30, marginBottom: 30}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" style={{marginBottom: 20}}>\r\n                        <RestaurantProfile\r\n                            restaurant={this.state.restaurant}\r\n                        />\r\n                        <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>Reviews</h4>\r\n                                    {/* check state reviews */}\r\n                                    { this.state.reviews ? (\r\n                                        // looping reviews data from state\r\n                                        this.state.reviews.map(({ review }) => (\r\n                                            <Review\r\n                                                review={review}\r\n                                                key={review.id}\r\n                                            />\r\n                                        ))\r\n                                    ) : (\r\n                                        <p>Loading...</p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\n// import Navbar Component\nimport Navbar from './components/Navbar';\n// import Footer component\nimport Footer from './components/Footer/Footer';\n// import Home page\nimport Home from './pages/Home';\n// import City page\nimport City from './pages/City';\n// import RestaurantDetail page\nimport RestaurantDetail from './pages/RestaurantDetail';\n// import Router\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import { HashRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      // fragment (<> </>) -> pengganti div, disarankan karena performa lebih baik\n      <Router>\n        {/* Start of navbar section */}\n        <Navbar />\n        {/* End of navbar section */ }\n\n        {/* Start of home page / route */}\n        <Route path=\"/\" exact component={Home} />\n        {/* End of home page */}\n\n        {/* Start of city page / route */}\n        <Route path=\"/city/:city_id\" component={City} />\n        {/* End of city page / route */}\n\n        {/* Start of RestaurantDetail page / route */}\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail} />\n        {/* End of RestaurantDetail page / route */}\n\n        {/* Start of footer section */}\n        <Footer />\n        {/* End of footer section */}\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// call library dotenv\nrequire(\"dotenv\").config();\n"],"sourceRoot":""}